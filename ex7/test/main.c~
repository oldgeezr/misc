#include "io.h"
#include <stdio.h>
#include <signal.h>
#include <unistd.h>
#include <sys/mman.h>

#include <rtdk.h>
#include <native/task.h>
#include <native/timer.h>


void test(void *arg)
{
        RTIME now, previous;

        /*
         * Arguments: &task (NULL=self),
         *            start time,
         *            period (here: 1 s)
         */
        rt_task_set_periodic(NULL, TM_NOW, 1000000000);
        previous = rt_timer_read();

        while (1) {
                rt_task_wait_period(NULL);
                now = rt_timer_read();

                
                rt_printf("Time since last turn: %ld.%06ld ms\n",
                       (long)(now - previous) / 1000000,
                       (long)(now - previous) % 1000000);
                       previous = now;
        }
}


int main() 
{
  /* Avoids memory swapping for this program */
  mlockall(MCL_CURRENT|MCL_FUTURE);
  
  int res = io_init();
  if(res != 1) 
  {
    puts("Could not start io library.");
  }
  
  RT_TASK test_task;
  rt_task_create(&test_task, "trivial", 0, 99, 0);
  
  rt_task_start(&test_task, &test, NULL);
  
  pause();
  
  rt_task_join(&test_task);
  
  rt_task_delete(&test_task);
  
  return 1;
}